<?php

namespace App\Http\Controllers;

use App\Models\clientes;
use App\Models\creditos;
use App\Models\nominaprestamos;
use App\Models\nominavariassucursales;

use Illuminate\Http\Request;

use App\Models\nomina;
use App\Models\puntosybiopagos;
use App\Models\bancos_list;

use App\Http\Requests\StorenominaRequest;
use App\Http\Requests\UpdatenominaRequest;
use Response;

class NominaController extends Controller
{

    function today()
    {
        return date("Y-m-d");
    }
    function delPersonalNomina(Request $req)
    {
        try {
            $id = $req->id;

            $setCargo = nomina::find($id)->delete();
            if ($setCargo) {
                return Response::json([
                    "msj" => "Ã‰xito",
                    "estado" => true,
                ]);
            }
        } catch (\Exception $e) {
            return Response::json([
                "msj" => "Error: " . $e->getMessage(),
                "estado" => false,
            ]);
        }
    }
    function activarPersonal(Request $req) {
        $id = $req->id;

        $n = nomina::find($id);

        if ($n) {
            $es = 0;
            if (!$n->activo) {
                $es = 1;
            }
            $n->activo = $es;
            $n->save();
        }
    }
    function getNomina(Request $req)
    {
        $codigo_origen = $req->codigo_origen;
        $id_ruta = (new InventarioSucursalController)->retOrigenDestino($codigo_origen, $codigo_origen);
        $id_origen = $id_ruta["id_origen"];

        
        return nomina::with(["cargo","prestamos", "pagos"=>function ($q) {
            $q->with("sucursal")->orderBy("created_at","asc");
        }])
        ->selectRaw("*, round(DATEDIFF(NOW(), nominas.nominafechadenacimiento)/365.25, 2) as edad, round(DATEDIFF(NOW(), nominas.nominafechadeingreso)/365.25, 2) as tiempolaborado")
        ->where("activo",1)
        ->where("id_sucursal_disponible", $id_origen)
        ->orderBy("nominanombre", "asc")
        ->orderBy("activo", "desc")
        ->get()
        ->map(function($q) {
            $cedula = $q->nominacedula;
            
            $today = (new NominaController)->today();
            $mesDate = strtotime($today);
            $mesDate = date('Y-m' , $mesDate);
    
            $mespasadoDate = strtotime('-1 months', strtotime($today));
            $mespasadoDate = date('Y-m' , $mespasadoDate);
    
            $mesantepasadoDate = strtotime('-2 months', strtotime($today));
            $mesantepasadoDate = date('Y-m' , $mesantepasadoDate);
    
            $mes = $mesDate;
            $mespasado = $mespasadoDate;
            $mesantepasado = $mesantepasadoDate;
            $ids = clientes::where("identificacion", "=",  $cedula)->select("id");
            $creditos = creditos::with("sucursal")->whereIn("id_cliente",$ids);

            $q->pagos = $q->pagos->map(function($q) {
                $q->created_at = date("d-m-Y", strtotime($q->created_at));
                return $q;
            });

            $pagos = $q->pagos;

            $mesSum = 0;
            $mespasadoSum = 0;
            $mesantepasadoSum = 0;

            foreach ($pagos as $pago) {
                if (str_contains($pago["created_at"],$mes)) {
                    $mesSum += $pago["monto"];
                }
                if (str_contains($pago["created_at"],$mespasado)) {
                    $mespasadoSum += $pago["monto"];
                }
                if (str_contains($pago["created_at"],$mesantepasado)) {
                    $mesantepasadoSum += $pago["monto"];
                }
            }
            $bono = $q["cargo"]["cargossueldo"];
            
            $q->mes = $mesSum;
            $q->mespasado = $mespasadoSum;
            $q->mesantepasado = $mesantepasadoSum;
            $q->bono = $bono;

            $q->quincena = $bono;
            $q->sumprestamos = $q->prestamos->sum("monto");
            
            $q->sumPagos = $pagos->sum("monto");

            $b = (floatval($bono)*2)-abs(floatval($mesSum));
            $maxpagopersona = $b>0?$b:0;

            $q->maxpagopersona = $maxpagopersona;
            
            $q->creditos = $creditos
            ->get()
            ->map(function($q) {
                $q->created_at = date("d-m-Y", strtotime($q->created_at));
                return $q;
            }); 
            $q->sumCreditos = $creditos->get()->sum("saldo");
            return $q;
        });

    }
    function getPersonalNomina(Request $req)
    {

        $qNomina = isset($req->qNomina)? $req->qNomina: "";
        $qSucursalNomina = isset($req->qSucursalNomina)? $req->qSucursalNomina: "";
        $qCargoNomina = isset($req->qCargoNomina)? $req->qCargoNomina: "";

        $qSucursalNominaOrden = isset($req->qSucursalNominaOrden) ? $req->qSucursalNominaOrden:"desc";
        $qSucursalNominaOrdenCampo = isset($req->qSucursalNominaOrdenCampo) ? $req->qSucursalNominaOrdenCampo:"sumPrestamos";
        $qSucursalNominaEstatus = $req->qSucursalNominaEstatus;
        $qSucursalNominaFecha = $req->qSucursalNominaFecha;
        
        

        $fechasMain1 = isset($req->fechasMain1)? $req->fechasMain1: "";
        $fechasMain2 = isset($req->fechasMain2)? $req->fechasMain2: "";

        $type = isset($req->type)? $req->type: "";

        $today = $qSucursalNominaFecha? $qSucursalNominaFecha:(new NominaController)->today();
        $mesDate = strtotime($today);
        $mesDate = date('Y-m' , $mesDate);

        $mespasadoDate = strtotime('-1 months', strtotime($today));
        $mespasadoDate = date('Y-m' , $mespasadoDate);

        $mesantepasadoDate = strtotime('-2 months', strtotime($today));
        $mesantepasadoDate = date('Y-m' , $mesantepasadoDate);

        $mes = $mesDate;
        $mespasado = $mespasadoDate;
        $mesantepasado = $mesantepasadoDate;

        $personal = nomina::with(["sucursal", "cargo","prestamos"])->where(function ($q) use ($qNomina) {
            $q
            ->orWhere("nominanombre", "LIKE", "%$qNomina%")
            ->orWhere("nominacedula", "LIKE", "%$qNomina%");
        })
        ->with(["pagos" => function ($q) use ($today){
            $q->with("sucursal")->where("created_at","<","$today 23:59:59")->orderBy("created_at","asc");
        }])
        ->selectRaw("*, round(DATEDIFF(NOW(), nominas.nominafechadenacimiento)/365.25, 2) as edad, round(DATEDIFF(NOW(), nominas.nominafechadeingreso)/365.25, 2) as tiempolaborado")
        ->when($qSucursalNominaEstatus!="", function ($q) use ($qSucursalNominaEstatus) {
            $q->where("activo", $qSucursalNominaEstatus);
        })
        ->when($qCargoNomina, function ($q) use ($qCargoNomina) {
            $q->where("nominacargo", $qCargoNomina);
        })
        ->when($qSucursalNomina, function ($q) use ($qSucursalNomina) {
            $q->where("nominasucursal", $qSucursalNomina);
        })
        ->orderBy("activo","desc")
        ->get()
        ->map(function($q) use ($mes,$mespasado,$mesantepasado, $today){
            $cedula = $q->nominacedula;
            $ids = clientes::where("identificacion", "=",  $cedula)->select("id");
            $creditos = creditos::with("sucursal")->where("created_at","<","$today 23:59:59")->whereIn("id_cliente",$ids); 

            $q->pagos = $q->pagos->map(function($q) {
                $q->created_at = date("d-m-Y", strtotime($q->created_at));
                return $q;
            });

            
            

            $pagos = $q->pagos;

            $mesSum = 0;
            $mespasadoSum = 0;
            $mesantepasadoSum = 0;

            foreach ($pagos as $pago) {
                if (str_contains($pago["created_at"],$mes)) {
                    $mesSum += $pago["monto"];
                }
                if (str_contains($pago["created_at"],$mespasado)) {
                    $mespasadoSum += $pago["monto"];
                }
                if (str_contains($pago["created_at"],$mesantepasado)) {
                    $mesantepasadoSum += $pago["monto"];
                }
            }


            
            $q->mes = $mesSum;
            $q->mespasado = $mespasadoSum;
            $q->mesantepasado = $mesantepasadoSum;



            $q->quincena = $q->cargo->cargossueldo;
            $diario = ($q->cargo->cargossueldo*2)/30;
            $q->diario = $diario;




            $today = new \DateTime($today);
            $iniciodelmes = new \DateTime(date("$mes-00"));
            $fechaingreso = new \DateTime($q->nominafechadeingreso);
            $tiempotrabajado = $iniciodelmes->diff($today);

            $tiempotrabajadomes = $fechaingreso->diff($today);

            if ($fechaingreso < $today && $fechaingreso < $iniciodelmes) {
                $tiempotrabajadoVar = $tiempotrabajado->d;
            }
            else if ($fechaingreso <= $today && $fechaingreso > $iniciodelmes) {
                $tiempotrabajadoVar = $tiempotrabajadomes->days+1;
            }
            else{
                $tiempotrabajadoVar = 0;
            }



            
            
            $q->tiempotrabajado = $tiempotrabajadoVar;
           // if ($tiempotrabajadoVar<=30) {
                $q->mensual = $tiempotrabajadoVar*$diario;
           // }else{
                //$q->mensual = $q->cargo->cargossueldo*2;
           // }


            $q->sumPagos = $pagos->sum("monto");
            $q->sumPrestamos = $q->prestamos->sum("monto");
            
            $q->creditos = $creditos->get()->map(function($q) {
                $q->created_at = date("d-m-Y", strtotime($q->created_at));
                return $q;
            }); 
            $q->sumCreditos = $creditos->get()->sum("saldo");
            return $q;
        })
        ->toArray();
        
        array_multisort(array_column($personal,$qSucursalNominaOrdenCampo), $qSucursalNominaOrden=="desc"?SORT_DESC:SORT_ASC, $personal);
        

        $bysucursalFun = collect($personal)->groupBy("sucursal.codigo");
        $bysucursal = [];

        
        
        foreach ($bysucursalFun as $i => $e) {
            $corresponde = abs($e->sum("mensual"));
            $pago = abs($e->sum("mes"));
            array_push($bysucursal,[
                "codigo" => $i,
                "sum" => count($e),
                "corresponde" => $corresponde,
                "pago" => $pago,
                "cuadre" =>$corresponde-$pago,
                "prestamos" =>$e->sum("sumPrestamos")
            ]);
        }



        return [
            "personal" => $personal,
            "estadisticas" => $bysucursal,
        ];
    }
    function setPersonalNomina(Request $req)
    {
        try {

            $nominaNombre = $req->nominaNombre;
            $nominaCedula = $req->nominaCedula;
            $nominaTelefono = $req->nominaTelefono;
            $nominaDireccion = $req->nominaDireccion;
            $nominaFechadeNacimiento = $req->nominaFechadeNacimiento;
            $nominaFechadeIngreso = $req->nominaFechadeIngreso;
            $nominaGradoInstruccion = $req->nominaGradoInstruccion;
            $nominaCargo = $req->nominaCargo;
            $nominaSucursal = $req->nominaSucursal;
            $id_sucursal_disponible = $req->nominaid_sucursal_disponible;
            $activo = $req->nominaactivo;
            
            

            $id = $req->id;

            $setPersonal = $this->setPersonal([
                "nominanombre" => $nominaNombre,
                "nominacedula" => $nominaCedula,
                "nominatelefono" => $nominaTelefono,
                "nominadireccion" => $nominaDireccion,
                "nominafechadenacimiento" => $nominaFechadeNacimiento,
                "nominafechadeingreso" => $nominaFechadeIngreso,
                "nominagradoinstruccion" => $nominaGradoInstruccion,
                "nominacargo" => $nominaCargo,
                "nominasucursal" => $nominaSucursal,
                "id_sucursal_disponible" => $id_sucursal_disponible,
                "activo" => $activo,
                "id" => $id,
            ]);

            if ($setPersonal) {
                return Response::json([
                    "msj" => "Ã‰xito",
                    "estado" => true,
                ]);
            }
        } catch (\Exception $e) {
            return Response::json([
                "msj" => "Error: " . $e->getMessage(),
                "estado" => false,
            ]);
        }

    }


    function setPersonal($arr)
    {
        return nomina::updateOrCreate([
            "id" => $arr["id"]
        ], [
            "nominanombre" => $arr["nominanombre"],
            "nominacedula" => $arr["nominacedula"],
            "nominatelefono" => $arr["nominatelefono"],
            "nominadireccion" => $arr["nominadireccion"],
            "nominafechadenacimiento" => $arr["nominafechadenacimiento"],
            "nominafechadeingreso" => $arr["nominafechadeingreso"],
            "nominagradoinstruccion" => $arr["nominagradoinstruccion"],
            "nominacargo" => $arr["nominacargo"],
            "nominasucursal" => $arr["nominasucursal"],
            "activo" => $arr["activo"],
            
            "id_sucursal_disponible" => isset($arr["id_sucursal_disponible"])?$arr["id_sucursal_disponible"]:""
        ]);
    }

    function cargarNomina2dajulio() {
        $nominas = [
            ["2024-07-31",	"22577315",	"309,97",	"788,41",	"0,00",	"0102",	"36,6128"],
            ["2024-08-01",	"22577315",	"0,00",	"0,00",	"732,26",	"0102",	"36,6128"],
            ["2024-08-01",	"22882537",	"0,00",	"0,00",	"732,74",	"0102",	"36,6368"],
            ["2024-08-01",	"27291818",	"309,97",	"1513,11",	"1838,20",	"0102",	"36,6128"],
            ["2024-08-01",	"19313072",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"18327548",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31364649",	"170,32",	"1513,11",	"1870,34",	"0102",	"36,6368"],
            ["2024-08-01",	"26328015",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"31269713",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"26980433",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"30649929",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"16767813",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"32597105",	"309,98",	"1513,10",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"27156216",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"29763461",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30893915",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"7256925",	"373,84",	"1513,11",	"860,81",	"0102",	"36,6368"],
            ["2024-08-01",	"14947038",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"13058656",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"32232723",	"136,10",	"1513,11",	"1904,56",	"0102",	"36,6368"],
            ["2024-08-01",	"24540318",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"24756313",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"28592643",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30649335",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"28749831",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"28662655",	"309,97",	"1513,11",	"8,76",	"0102",	"36,6368"],
            ["2024-08-01",	"31415432",	"309,97",	"1513,11",	"932,37",	"0102",	"36,6368"],
            ["2024-08-01",	"28001610",	"309,97",	"0,00",	"974,88",	"0102",	"36,6368"],
            ["2024-08-01",	"22888796",	"309,97",	"1513,11",	"932,37",	"0102",	"36,6368"],
            ["2024-08-01",	"27840945",	"309,97",	"1513,11",	"932,37",	"0102",	"36,6368"],
            ["2024-08-01",	"30627539",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"29782817",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"21663070",	"309,97",	"1513,11",	"932,37",	"0102",	"36,6368"],
            ["2024-08-01",	"27841416",	"309,97",	"1513,11",	"927,24",	"0102",	"36,6368"],
            ["2024-08-01",	"31738799",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"20722506",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"19552701",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"30049527",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"30483067",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"24944934",	"309,97",	"1513,11",	"3306,07",	"0102",	"36,6368"],
            ["2024-08-01",	"28225519",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"26615587",	"309,97",	"1513,11",	"1107,86",	"0102",	"36,6368"],
            ["2024-08-01",	"31711968",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"30626680",	"309,97",	"0,00",	"972,32",	"0102",	"36,6368"],
            ["2024-08-01",	"25727467",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"15712296",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30463520",	"309,97",	"0,00",	"605,95",	"0102",	"36,6368"],
            ["2024-08-01",	"31142063",	"309,97",	"0,00",	"1338,69",	"0102",	"36,6368"],
            ["2024-08-01",	"30276705",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"24240041",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"26518044",	"309,97",	"1513,11",	"9167,96",	"0102",	"36,6368"],
            ["2024-08-01",	"27338249",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"24199380",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"31720151",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"26980585",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"7263302",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"22292348",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"21258429",	"309,97",	"1513,11",	"558,31",	"0102",	"36,6368"],
            ["2024-08-01",	"28479548",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"29890055",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"31849460",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"27800905",	"309,97",	"1513,11",	"375,13",	"0102",	"36,6368"],
            ["2024-08-01",	"28241946",	"309,97",	"1513,11",	"1107,86",	"0102",	"36,6368"],
            ["2024-08-01",	"30693596",	"309,97",	"1513,11",	"8,76",	"0102",	"36,6368"],
            ["2024-08-01",	"31618263",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"31408944",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"30327154",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"30327154",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"19512649",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31546267",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"21005686",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"30388637",	"309,97",	"1513,11",	"1107,86",	"0102",	"36,6368"],
            ["2024-08-01",	"18411230",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"30155108",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"30094114",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"26848615",	"309,97",	"1513,11",	"8,76",	"0102",	"36,6368"],
            ["2024-08-01",	"30012068",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"19219790",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"31100301",	"0,00",	"1513,11",	"0,00",	"0102",	"36,6368"],
            ["2024-08-01",	"27347834",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"22216825",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"31461114",	"309,97",	"1513,11",	"8,76",	"0102",	"36,6368"],
            ["2024-08-01",	"27117982",	"309,97",	"1513,11",	"8,76",	"0102",	"36,6368"],
            ["2024-08-01",	"31014327",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30157715",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"27653706",	"309,97",	"1513,11",	"1107,86",	"0102",	"36,6368"],
            ["2024-08-01",	"26151189",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31737602",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"24632763",	"309,97",	"1513,11",	"2573,34",	"0102",	"36,6368"],
            ["2024-08-01",	"28266206",	"309,97",	"1513,11",	"1657,42",	"0102",	"36,6368"],
            ["2024-08-01",	"29716771",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"28519007",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"30996479",	"309,97",	"1513,11",	"1840,60",	"0102",	"36,6368"],
            ["2024-08-01",	"24986853",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"30291109",	"309,97",	"1513,11",	"5687,46",	"0102",	"36,6368"],
            ["2024-08-01",	"30649237",	"0,00",	"0,00",	"366,37",	"0102",	"36,6368"],
            ["2024-08-01",	"24755801",	"0,00",	"0,00",	"1099,10",	"0102",	"36,6368"],
            ["2024-08-01",	"20722633",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"29861120",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"29893809",	"309,97",	"1513,11",	"191,94",	"0102",	"36,6368"],
            ["2024-08-01",	"31398679",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"28452009",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30344136",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"27639053",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31251225",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"13254790",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31269951",	"309,97",	"1513,11",	"558,31",	"0102",	"36,6368"],
            ["2024-08-01",	"18543262",	"309,97",	"1513,11",	"2939,70",	"0102",	"36,6368"],
            ["2024-08-01",	"27721175",	"309,97",	"1513,11",	"1474,23",	"0102",	"36,6368"],
            ["2024-08-01",	"25122087",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-01",	"32490082",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"31047620",	"309,97",	"1513,11",	"594,95",	"0102",	"36,6368"],
            ["2024-08-01",	"29856686",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"25591327",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"29890815",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"25122066",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"25634746",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"27291827",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"24239890",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"26961582",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-01",	"29723909",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"19889522",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"30662158",	"309,97",	"1513,11",	"924,68",	"0102",	"36,6368"],
            ["2024-08-01",	"19471766",	"309,97",	"1513,11",	"5504,28",	"0102",	"36,6368"],
            ["2024-08-01",	"13149202",	"309,97",	"1513,11",	"16808,04",	"0102",	"36,6423"],
            ["2024-08-01",	"14981088",	"0,00",	"0,00",	"1831,84",	"0102",	"36,6368"],
            ["2024-08-01",	"27171503",	"309,97",	"1513,11",	"3982,41",	"0102",	"36,6368"],
            ["2024-08-01",	"26840026",	"309,97",	"1513,11",	"3982,41",	"0102",	"36,6368"],
            ["2024-08-01",	"29978620",	"309,97",	"1513,11",	"3982,41",	"0102",	"36,6368"],
            ["2024-08-01",	"19918980",	"309,97",	"1513,11",	"4221,99",	"0102",	"36,6368"],
            ["2024-08-01",	"21658405",	"309,97",	"1513,11",	"3982,41",	"0102",	"36,6368"],
            ["2024-08-01",	"30689878",	"309,97",	"1513,11",	"16805,29",	"0102",	"36,6368"],
            ["2024-08-01",	"25968918",	"309,97",	"1513,11",	"7646,09",	"0102",	"36,6368"],
            ["2024-08-01",	"19816790",	"309,97",	"1513,11",	"16805,29",	"0102",	"36,6368"],
            ["2024-08-01",	"31100731",	"309,97",	"1513,11",	"3982,41",	"0102",	"36,6368"],
            ["2024-08-01",	"31151481",	"309,97",	"1513,11",	"1474,23",	"0102",	"36,6368"],
            ["2024-08-02",	"28398625",	"309,97",	"1513,11",	"3668,84",	"0102",	"36,6128"],
            ["2024-08-02",	"9870815",	"373,84",	"1513,11",	"128,38",	"0102",	"36,6423"],
            ["2024-08-02",	"5555555",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"29791645",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"30418309",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"30669536",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31712717",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31720317",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"30290604",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"32006442",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"17602839",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"14238992",	"309,97",	"1513,11",	"375,46",	"0102",	"36,6423"],
            ["2024-08-02",	"22882946",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"30137059",	"309,97",	"1513,11",	"192,25",	"0102",	"36,6423"],
            ["2024-08-02",	"21658422",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"24236595",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31720319",	"309,97",	"1513,11",	"558,67",	"0102",	"36,6423"],
            ["2024-08-02",	"26088100",	"309,97",	"1513,11",	"8253,55",	"0102",	"36,6423"],
            ["2024-08-02",	"29558107",	"309,97",	"1513,11",	"0,00",	"0102",	"36,6423"],
            ["2024-08-02",	"29647768",	"309,97",	"1513,11",	"2757,21",	"0102",	"36,6423"],
            ["2024-08-02",	"27313750",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"21662440",	"309,97",	"1513,11",	"2026,93",	"0102",	"36,6423"],
            ["2024-08-02",	"31939518",	"309,97",	"1513,11",	"561,23",	"0102",	"36,6423"],
            ["2024-08-02",	"16506835",	"309,97",	"1513,11",	"932,79",	"0102",	"36,6423"],
            ["2024-08-02",	"21663105",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"31305822",	"309,97",	"1513,11",	"9,04",	"0102",	"36,6423"],
            ["2024-08-02",	"27664574",	"309,97",	"1513,11",	"1294,08",	"0102",	"36,6423"],
            ["2024-08-02",	"23567366",	"309,97",	"1513,11",	"2759,77",	"0102",	"36,6423"],
            ["2024-08-02",	"30374993",	"309,97",	"1513,11",	"1477,29",	"0102",	"36,6423"],
            ["2024-08-02",	"25382917",	"309,97",	"1513,11",	"9,04",	"0102",	"36,6423"],
            ["2024-08-02",	"30375069",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"29946263",	"0,00",	"0,00",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"25382901",	"309,97",	"0,00",	"422,88",	"0102",	"36,6423"],
            ["2024-08-02",	"19657696",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"28169983",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"26944205",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"24662786",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"27841873",	"309,97",	"1513,11",	"932,79",	"0102",	"36,6423"],
            ["2024-08-02",	"31171730",	"309,97",	"1513,11",	"375,46",	"0102",	"36,6423"],
            ["2024-08-02",	"27171957",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"29865868",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"27338604",	"309,97",	"1513,11",	"6414,48",	"0102",	"36,6423"],
            ["2024-08-02",	"29865518",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"24620776",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"24620118",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"30049744",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"29647167",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"30732611",	"309,97",	"1513,11",	"6414,48",	"0102",	"36,6423"],
            ["2024-08-02",	"30374581",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"25617470",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-02",	"24967623",	"309,97",	"1513,11",	"4589,32",	"0102",	"36,6423"],
            ["2024-08-02",	"8795242",	"309,97",	"1513,11",	"927,66",	"0102",	"36,6423"],
            ["2024-08-02",	"21042379",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"19552701",	"0,00",	"0,00",	"1832,12",	"0102",	"36,6423"],
            ["2024-08-02",	"12321531",	"0,00",	"0,00",	"1831,84",	"0102",	"36,6368"],
            ["2024-08-02",	"30483067",	"0,00",	"0,00",	"1832,12",	"0102",	"36,6423"],
            ["2024-08-02",	"32493050",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"20587807",	"309,97",	"1513,11",	"485,38",	"0102",	"36,6423"],
            ["2024-08-02",	"29781117",	"309,97",	"1513,11",	"0,00",	"0102",	"36,6423"],
            ["2024-08-02",	"29941383",	"309,97",	"1513,11",	"4772,53",	"0102",	"36,6423"],
            ["2024-08-02",	"26919261",	"309,97",	"1513,11",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-02",	"21337318",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"30627540",	"309,97",	"1513,11",	"2940,42",	"0102",	"36,6423"],
            ["2024-08-02",	"27721112",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-02",	"32160004",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-02",	"25864501",	"309,97",	"1513,11",	"7337,50",	"0102",	"36,6423"],
            ["2024-08-02",	"30039466",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31633203",	"309,97",	"1513,11",	"741,88",	"0102",	"36,6423"],
            ["2024-08-02",	"31415653",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"20522737",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"29576029",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"21605296",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31961565",	"309,97",	"1513,11",	"192,25",	"0102",	"36,6423"],
            ["2024-08-02",	"28482053",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"26615328",	"309,97",	"1513,11",	"375,46",	"0102",	"36,6423"],
            ["2024-08-02",	"19472518",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"27326570",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"22883984",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"31473397",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"13448250",	"309,97",	"1513,11",	"192,25",	"0102",	"36,6423"],
            ["2024-08-02",	"12581554",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"26889969",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-02",	"22615040",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-02",	"26824539",	"309,97",	"0,00",	"789,30",	"0102",	"36,6423"],
            ["2024-08-02",	"10615656",	"264,34",	"1513,11",	"2802,84",	"0102",	"36,6423"],
            ["2024-08-02",	"18328494",	"89,04",	"1122,63",	"254,02",	"0102",	"36,6423"],
            ["2024-08-02",	"13805522",	"0,00",	"0,00",	"5496,35",	"0102",	"36,6423"],
            ["2024-08-02",	"12323322",	"309,97",	"1513,11",	"16498,07",	"0102",	"36,6423"],
            ["2024-08-02",	"24994418",	"309,97",	"1513,11",	"3983,24",	"0102",	"36,6423"],
            ["2024-08-02",	"21455229",	"309,97",	"1513,11",	"3983,24",	"0102",	"36,6423"],
            ["2024-08-02",	"13727686",	"309,97",	"1513,11",	"2151,12",	"0102",	"36,6423"],
            ["2024-08-02",	"28029636",	"309,97",	"1513,11",	"7647,47",	"0102",	"36,6423"],
            ["2024-08-03",	"22615693",	"0,00",	"0,00",	"5496,35",	"0102",	"36,6423"],
            ["2024-08-03",	"29558107",	"0,00",	"0,00",	"1841,15",	"0102",	"36,6423"],
            ["2024-08-03",	"19405011",	"0,00",	"0,00",	"7328,46",	"0102",	"36,6423"],
            ["2024-08-03",	"29946263",	"309,97",	"1513,11",	"0,00",	"0102",	"36,6423"],
            ["2024-08-03",	"24967623",	"0,00",	"0,00",	"7328,46",	"0102",	"36,6423"],
            ["2024-08-03",	"26130193",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-03",	"18146884",	"309,97",	"1513,11",	"9169,61",	"0102",	"36,6423"],
            ["2024-08-03",	"20091742",	"309,97",	"1513,11",	"7337,50",	"0102",	"36,6423"],
            ["2024-08-03",	"26652648",	"309,97",	"1513,11",	"3673,27",	"0102",	"36,6423"],
            ["2024-08-04",	"30732611",	"309,97",	"1513,11",	"192,25",	"0102",	"36,6423"],
            ["2024-08-04",	"21581668",	"309,97",	"1513,11",	"9,04",	"0102",	"36,6423"],
            ["2024-08-04",	"31100301",	"309,97",	"0,00",	"1840,60",	"0102",	"36,6423"],
            ["2024-08-04",	"31757035",	"309,97",	"1513,11",	"925,09",	"0102",	"36,6423"],
            ["2024-08-05",	"27907406",	"309,97",	"1513,11",	"928,65",	"0102",	"36,6555"],
            ["2024-08-05",	"32021273",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-05",	"25796046",	"309,97",	"1513,11",	"7336,12",	"0102",	"36,6368"],
            ["2024-08-05",	"26665416",	"309,97",	"1513,11",	"3672,44",	"0102",	"36,6368"],
            ["2024-08-06",	"21315111",	"309,97",	"1513,11",	"6604,65",	"0102",	"36,6423"],
            ["2024-08-06",	"29781117",	"0,00",	"0,00",	"1474,73",	"0102",	"36,6527"],
            ["2024-08-06",	"17330790",	"206,65",	"1008,74",	"617,25",	"0102",	"36,6527"],
            ["2024-08-06",	"27331896",	"309,97",	"1513,11",	"9482,70",	"0102",	"36,6527"],
        ];

        foreach ($nominas as $key => $e) {
            $id_banco = bancos_list::where("codigo",$e[5])->first()->id;
            $ci = $e[1];
            $tasa = $e[6];
            $id_nomina = nomina::where("nominacedula",$ci)->first("id");
            
            $monto_bs = $e[2];
            $monto = $e[2]/$tasa;
            /* $p = puntosybiopagos::updateOrCreate(["id"=>null],[
                "loteserial" => "NOMINA ADMIN ".$ci,
                "banco" => $e[5],
                "id_banco" => $id_banco,
                "categoria" => 29,
                "fecha" => $e[0],
                "fecha_liquidacion" => $e[0],
                "tipo" => "Transferencia",

                "id_sucursal" => 13,
                "id_beneficiario" => $id_nomina,
                "tasa" => $tasa,
                
                "monto" => $monto_bs*-1,
                "monto_liquidado" => $monto_bs*-1,
                "monto_dolar" => 0,

                "origen" => 2,
                "id_usuario" => session("id_usuario"),
            ]); */
            if ($monto && $tasa) {
                (new NominapagosController)->setPagoNomina($ci, $monto, 13, 173932, "2024-07-30");
            }


            $monto_bs = $e[3];
            $monto = $e[3]/$tasa;
            /* $p = puntosybiopagos::updateOrCreate(["id"=>null],[
                "loteserial" => "NOMINA ADMIN ".$ci,
                "banco" => $e[5],
                "id_banco" => $id_banco,
                "categoria" => 29,
                "fecha" => $e[0],
                "fecha_liquidacion" => $e[0],
                "tipo" => "Transferencia",

                "id_sucursal" => 13,
                "id_beneficiario" => $id_nomina,
                "tasa" => $tasa,
                
                "monto" => $monto_bs*-1,
                "monto_liquidado" => $monto_bs*-1,
                "monto_dolar" => 0,

                "origen" => 2,
                "id_usuario" => session("id_usuario"),
            ]); */
            if ($monto && $tasa) {
                (new NominapagosController)->setPagoNomina($ci, $monto, 13, 173932, "2024-07-30");
            }


            $monto_bs = $e[4];
            $monto = $e[4]/$tasa;
            /* $p = puntosybiopagos::updateOrCreate(["id"=>null],[
                "loteserial" => "NOMINA ADMIN ".$ci,
                "banco" => $e[5],
                "id_banco" => $id_banco,
                "categoria" => 29,
                "fecha" => $e[0],
                "fecha_liquidacion" => $e[0],
                "tipo" => "Transferencia",

                "id_sucursal" => 13,
                "id_beneficiario" => $id_nomina,
                "tasa" => $tasa,
                
                "monto" => $monto_bs*-1,
                "monto_liquidado" => $monto_bs*-1,
                "monto_dolar" => 0,

                "origen" => 2,
                "id_usuario" => session("id_usuario"),
            ]); */
            if ($monto && $tasa) {
                (new NominapagosController)->setPagoNomina($ci, $monto, 13, 173932, "2024-07-30");
            }
        }
    }
}
